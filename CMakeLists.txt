cmake_minimum_required(VERSION 3.14)
project("undreamai" C CXX)

add_subdirectory("llama.cpp")
if(DEFINED CMAKE_LIBRARY_OUTPUT_DIRECTORY)
    set_property(DIRECTORY llama.cpp PROPERTY CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
endif()

if (NOT WIN32)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
    set_target_properties(common PROPERTIES COMPILE_FLAGS "-fPIC")
    set_target_properties(ggml PROPERTIES COMPILE_FLAGS "-fPIC -static -static-libgcc -static-libstdc++")
    set_target_properties(llama PROPERTIES COMPILE_FLAGS "-fPIC")
endif()

set(LIBRARY undreamai)
add_library(${LIBRARY} SHARED stringwrapper.cpp utils_callback.hpp undreamai.cpp)
install(TARGETS ${LIBRARY} LIBRARY)
target_include_directories(${LIBRARY} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR} llama.cpp/examples/server)
target_link_libraries(${LIBRARY} PRIVATE common ggml llama)
target_compile_features(${LIBRARY} PRIVATE cxx_std_11)
add_compile_definitions(${LIBRARY} PRIVATE UNDREAMAI_EXPORTS)

set(TEST undreamai_test)
add_executable(${TEST} undreamai_test.cpp stringwrapper.cpp)
target_include_directories(${TEST} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR} llama.cpp/examples/server)
target_link_libraries(${TEST} PRIVATE ${LIBRARY} common ggml llama)
target_compile_features(${TEST} PRIVATE cxx_std_11)
add_compile_definitions(${TEST} PRIVATE UNDREAMAI_EXPORTS)

if (BUILD_UNDREAMAI_SERVER)
    set(SERVER undreamai_server)
    add_executable(${SERVER} undreamai_server.cpp stringwrapper.cpp)
    target_include_directories(${SERVER} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR} llama.cpp/examples/server)
    target_link_libraries(${SERVER} PRIVATE ${LIBRARY} common ggml llama)
    target_compile_features(${SERVER} PRIVATE cxx_std_11)
    add_compile_definitions(${SERVER} PRIVATE UNDREAMAI_EXPORTS)
endif()