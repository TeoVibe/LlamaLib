cmake_minimum_required(VERSION 3.14)
project("undreamai" C CXX)

add_subdirectory("llama.cpp")
if(DEFINED CMAKE_LIBRARY_OUTPUT_DIRECTORY)
    set_property(DIRECTORY llama.cpp PROPERTY CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
endif()

if (NOT WIN32)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
    set_target_properties(json-schema-to-grammar PROPERTIES COMPILE_FLAGS "-fPIC")
    set_target_properties(common PROPERTIES COMPILE_FLAGS "-fPIC")
    set_target_properties(ggml PROPERTIES COMPILE_FLAGS "-fPIC")
    set_target_properties(llama PROPERTIES COMPILE_FLAGS "-fPIC")
endif()

set(TARGET undreamailib)
add_library(${TARGET} SHARED undreamai.cpp)
install(TARGETS ${TARGET} LIBRARY)
target_include_directories(${TARGET} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR} llama.cpp/examples/server)
target_link_libraries(${TARGET} PRIVATE common json-schema-to-grammar ggml_static llama)
target_compile_features(${TARGET} PRIVATE cxx_std_11)
add_compile_definitions(${TARGET} PRIVATE UNDREAMAI_EXPORTS)

set(TARGET archchecker)
add_library(${TARGET} SHARED archchecker.cpp)
install(TARGETS ${TARGET} LIBRARY)
target_include_directories(${TARGET} PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})
target_link_libraries(${TARGET} PRIVATE common ggml_static)
target_compile_features(${TARGET} PRIVATE cxx_std_11)
add_compile_definitions(${TARGET} PRIVATE ARCHCHECKER_EXPORTS)
