name: Build library

on:
  push:
    paths:
      - .github/workflows/build_library.yaml
      - CMakeLists.txt
      - undreamai.h
      - undreamai.cpp
    tags:
      - 'test-*'

env:
  LLAMACPP_VERSION: b2989
  LLAMAFILE_VERSION: 0.8.6
  OPENCL_VERSION: 2023.04.17
  CLBLAST_VERSION: 1.6.0
  CMAKE_COMMON_JOBS: '-DLLAMA_STATIC=ON -DLLAMA_BUILD_TESTS=OFF -DLLAMA_BUILD_EXAMPLES=OFF -DCMAKE_RUNTIME_OUTPUT_DIRECTORY=${{ github.workspace }}/build/libs -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=${{ github.workspace }}/build/libs -DBUILD_UNDREAMAI_SERVER=ON'

jobs:
  
    android-build:
        runs-on: ubuntu-latest
        steps:
            - name: Clone
              id: checkout
              uses: actions/checkout@v4

            - name: Get Variables
              run: |
                echo "NDK=$ANDROID_NDK" >> $GITHUB_ENV
      
            - name: Clone llama.cpp
              run: |
                git clone https://github.com/ggerganov/llama.cpp llama.cpp
                cd llama.cpp
                git checkout ${{ env.LLAMACPP_VERSION }}
                sed -i 's:utils.hpp:utils_callback.hpp:g' examples/server/server.cpp
                sed -i 's:main(int argc:main_server(int argc:g' examples/server/server.cpp
                cd ..
                mkdir -p build/licenses build/libs
                cp llama.cpp/LICENSE build/licenses/llama.cpp.LICENSE.txt
      
            - name: Create missing files
              run: |
                cd llama.cpp
                cmake -DINPUT=examples/server/public/completion.js -DOUTPUT=examples/server/completion.js.hpp -P scripts/xxd.cmake
                cmake -DINPUT=examples/server/public/index.html -DOUTPUT=examples/server/index.html.hpp -P scripts/xxd.cmake
                cmake -DINPUT=examples/server/public/index.js -DOUTPUT=examples/server/index.js.hpp -P scripts/xxd.cmake
                cmake -DINPUT=examples/server/public/json-schema-to-grammar.mjs -DOUTPUT=examples/server/json-schema-to-grammar.mjs.hpp -P scripts/xxd.cmake

            - name: Dependencies
              run: |
                sudo apt-get update
                sudo apt-get install build-essential cmake tar p7zip-full opencl-headers
      
            - name: Build
              id: cmake_build
              run: |
                sed -i "s:LIBRARY undreamai:LIBRARY undreamai_android:g" CMakeLists.txt
                export LD_LIBRARY_PATH=""
                cd build
                cmake .. -DCMAKE_TOOLCHAIN_FILE=$NDK/build/cmake/android.toolchain.cmake -DANDROID_ABI=arm64-v8a -DANDROID_PLATFORM=android-23 -DCMAKE_C_FLAGS=-march=armv8.4a+dotprod ${{ env.CMAKE_COMMON_JOBS }}
                cmake --build . --config Release -j ${env:NUMBER_OF_PROCESSORS}

            - name: Pack artifacts
              id: pack_artifacts
              run: |
                zip -j undreamai-${{ github.ref_name }}-llamacpp-linux-${{ matrix.build }}.zip build/licenses/* build/libs/*
      
            - name: Upload Artifacts
              uses: actions/upload-artifact@v4
              with:
                name: undreamai-${{ github.ref_name }}-llamacpp-linux-${{ matrix.build }}.zip
                path: undreamai-${{ github.ref_name }}-llamacpp-linux-${{ matrix.build }}.zip